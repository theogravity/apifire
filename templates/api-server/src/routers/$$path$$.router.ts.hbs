// This file is automatically generated and should not be edited.
import { Router, Response, NextFunction } from 'express'
import { IRequest } from '../interfaces'
import * as ApiInterfaces from '../interfaces/api'
{{#if openapi.components.securitySchemes}}
// This is defined because a securitySchemes entry was defined in the OpenAPI components section
import { protectEndpoint } from '../middleware/protect-endpoint-middleware'
{{/if}}

import {
{{#each operation}}
  {{#each this.path}}
    {{#validMethod @key}}
  {{funcOperation ../operationId}},
    {{/validMethod}}
  {{/each}}
{{/each}}
} from '../controllers/{{operation_name}}'

import {
{{#each operation}}
  {{#each this.path}}
    {{#validMethod @key}}
  validate{{formatOperation ../operationId}}Params,
{{/validMethod}}
  {{/each}}
{{/each}}
} from './validators/{{operation_name}}.validator'

const router = Router()

{{#each operation}}
    {{#each this.path}}
        {{#validMethod @key}}
/**
{{#if ../description}}
 * {{{docComment ../description}}}
{{/if}}
{{#each ../parameters}}
 * @param {{schema.type}} {{#unless required}}[{{/unless}}{{name}}{{#unless required}}]{{/unless}} {{{description}}}
{{/each}}
 */
router.{{@key}}('{{../../subresource}}',
{{#if ../security}}protectEndpoint({
  scopes: [{{{resolveAuthScopes ../security}}}]
}),{{/if}}async (req: IRequest, res: Response, next: NextFunction) => {
  const params : ApiInterfaces.{{paramOperation ../operationId}} = {
{{! handle /path/{param} }}
{{#if ../../path/parameters}}
{{> parseRouterParams ../../path }}
{{/if}}
{{> parseRouterParams .. }}
  }

  try {
    validate{{formatOperation ../operationId}}Params(params)

    const result = await {{funcOperation ../operationId}}(req.context, params)

    if (!res.apifire?.disableAutoSend && !res.headersSent) {
  {{#ifNoSuccessResponses ../responses}}
      res.status(200).send(result)
  {{else}}
      res.send(result);
  {{/ifNoSuccessResponses}}
    }
  } catch (err) {
    next(err)
  }
})
        {{/validMethod}}
    {{/each}}
{{/each}}

export default router
