// This file is automatically generated and should not be edited.
import Ajv from 'ajv'
import addFormats from 'ajv-formats'
import { getErrRegistry } from '../../utils/errors'

const ajv = new Ajv({
  allErrors: true,
})

addFormats(ajv)

{{#each operation}}
  {{#each this.path}}
  {{#with this}}
    {{#validMethodContext this @key}}
const {{funcOperation operationId}}Validator = ajv.compile({
  type: 'object',
  required: [
{{! handle /path/{param} }}
{{#if ../path/parameters}}
{{> parseValidationRequired ../path}}
{{/if}}
{{> parseValidationRequired this}}
],
  properties: {
    {{! handle /path/{param} }}
    {{#if ../path/parameters}}
    {{> parseValidationProperties ../path}}
    {{/if}}
    {{> parseValidationProperties this}}
  }
})

export function validate{{formatOperation operationId}}Params (params) {
  const valid = {{funcOperation operationId}}Validator(params)

  if (!valid) {
    throw getErrRegistry().newError('VALIDATION_FAILURE', 'INVALID_REQ_PARAMS').withSafeMetadata({
      validations: {{funcOperation operationId}}Validator.errors
    })
  }
}
    {{/validMethodContext}}
  {{/with}}
  {{/each}}
{{/each}}
